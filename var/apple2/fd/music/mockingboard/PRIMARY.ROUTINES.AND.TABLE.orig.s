; PRIMARY ROUTINES FOR SLOT 4
;
                ORG     $9000
;
; ADDRESSES FOR FIRST 6522
;
ORB             EQU     $C400           ;PORT B
ORA             EQU     $C401           ;PORT A
DDRB            EQU     $C402           ;DATA DIRECTION REGISTER (A)
DDRA            EQU     $C403           ;DATA DIRECTION REGISTER (B)
;
; ADDRESSES FOR SECOND 6522
;
ORB2            EQU     $C480           ;PORT B
ORA2            EQU     $C481           ;PORT A
DDRB2           EQU     $C482           ;DATA DIRECTION REGISTER (B)
DDRA2           EQU     $C483           ;DATA DIRECTION REGISTER (A)
;
; ROUTINES FOR FIRST 6522
;
INIT            LDA     #$FF            ;SET PORT A FOR OUTPUT
                STA     DDRA
                LDA     #$07            ;SET PORT B FOR OUTPUT
                STA     DDRB
                RTS

LATCH           LDA     #$07            ;SEND "LATCH COMMAND"
                STA     ORB             ;TO SOUND CHIP
                LDA     #$04            ;THROUGH PORT B
                STA     ORB
                RTS

WRITE	        LDA	#$06		;SEND "WRITE COMMAND"
		STA	ORB		;TO SOUND CHIP
		LDA	#$04		;THROUGH PORT B
		STA	ORB
		RTS			;RETURN

RESET	        LDA	#$00		;SEND "RESET COMMAND"
		STA	ORB		;TO SOUND CHIP
		LDA	#$04		;THROUGH PORT B
		STA	ORB
		RTS			;RETURN
;
; ROUTINES FOR SECOND 6522
;
INIT2		LDA	#$FF		;SET PORT A FOR OUTPUT
		STA	DDRA2
		LDA	#$07		;SET PORT B FOR OUTPUT
		STA	DDRB2
		RTS			;RETURN

LATCH2	        LDA	#$07		;SEND "LATCH COMMAND"
		STA	ORB2		;TO SOUND CHIP
		LDA	#$04		;THROUGH PORT B
		STA	ORB2	
		RTS			;RETURN	

WRITE2	        LDA	#$06		;SEND "WRITE COMMAND"
		STA	ORB2		;TO SOUND CHIP
		LDA	#$04		;THROUGH PORT B
		STA	ORB2
		RTS			;RETURN

RESET2          STA	#$00		;SEND "RESET COMMAND"
		STA	ORB2		;TO SOUND CHIP
		LDA	#$04		;THROUGH PORT B
		STA	ORB2
		RTS			;RETURN



; TABLE ACCESS ROUTINE
; FOR SLOT 4
;
		ORG	$8000
;                                       ;ADDRESSES FOR FIRST 6522
PTR		EQU	$08	        ;DATA POINTER
ORA		EQU	$C401	        ;PORT A
LATCH	        EQU	$900B	        ;LATCH SUB-ROUTINE
WRITE	        EQU	$9016	        ;WRITE SUB-ROUTINE
RESET	        EQU	$9021	        ;RESET SUB-ROUTINE
*				        ;ADDRESSES FOR SECOND 6522
PRT2		EQU	$0A	        ;DATA POINTER
ORA2		EQU	$C481	        ;PORT A
LATCH2	        EQU	$9037	        ;LATCH SUB-ROUTINE
WRITE2	        EQU	$9042	        ;RESET SUB-ROUTINE
RESET2	        EQU	$904D	        ;RESET SUB-ROUTINE
;	
; ROUTINES FOR FIRST 6255
;
START	        JSR	RESET	        ;RESET SOUND CHIP
		LDY	#$00	        ;USED TO IDENTIFY REGISTER
LOOP		STY	ORA	        ;# OF SOUND CHIP
		JSR	LATCH
		LDA	(PTR),Y	        ;GET DATA FROM TABLE
		STA	ORA
		JSR	WRITE	        ;STORE IN REGISTER
		CPY	#$0F	        ;END OF DATA?
		BEQ	DONE	        ;YES, EXIT
		INY
		JMP	LOOP	        ;NO, GET NEXT SET
DONE		RTS		        ;RETURN
;	
; ROUTINES FOR SECOND 6522	
;	
START2	        JSR	RESET2	        ;SAME INSTRUCTIONS AS 
		LDY	#$00	        ;ABOVE
LOOP2	        STY	ORA2
		JSR	LATCH2
		LDA	(PTR2),Y
		STA	ORA2
		JSR	WRITE2
		CPY	#$0F
		BEQ	DONE2
		INY
		JMP	LOOP2
DONE2	RTS



; PROCESSOR LOOP
; FOR LASER AND BOMB
; SOUND EFFECT
;
		ORG	$8F00
; FOR FIRST 6522
;	
PTR		EQU	$08	        ;DATA POINTE
TONE		EQU	$0A	        ;TONAL VALUE
TIME		EQU	$0B	        ;TIME VALUE FOR DELAY
BASE		EQU	$C400	        ;CARD ADDRESS
ORA		EQU	BASE+1	        ;PORT A
TAR		EQU	$8000	        ;TABLE ACCESS ROUTINE
LATCH	EQU	$900B		        ;LATCH SUBROUTINE
WRITE	EQU	$9016		        ;WRITE SUBROUTINE
RESET	EQU	$9021		        ;RESET SUBROUTINE
WAIT		EQU	$FCAB	        ;WAIT SUBROUTINE
;	
;	
LASER	LDA	#$00		        ;LOAD HIGHEST
		STA	TONE	        ;FREQUENCY VALUE
		LDA	#$0F	        ;LOAD SHORT
		STA	TIME	        ;TIME DELAY
		JMP	START	        ;AND START
BOMB	LOA	#$30		        ;LOAD MIDDLE
		STA	TONE	        ;FREQUENCY VALUE
		LDA	#$40	        ;LOAD LONGER
		STA	TIME	        ;TIME DELAY
START	LDA	#$90		        ;SET TABLE ADDRESS
		STA	PTR
		LDA	#$81
		STA	PTR+1
		JSR	TAR	        ;TRANSFER DATA
		LDA	#$00	        ;LATCH FIRST REGISTER
		STA	ORA	        ;ADDRESS
		JSR	LATCH
LOOP		LDA	TONE	        ;GET TONE VALUE
		STA	ORA	        ;STORE IN REGISTER
		JSR	WRITE
		LDA	TIME	        ;GET TIME VALUE	
		JSR	WAIT	        ;AND DELAY
		INC	TONE	        ;INCREMENT TONE VALUE
		LDA	#$FF	        ;END OF INCREASE?
		CMP	TONE
		BEQ	DONE	        ;YES,EXIT
		JMP	LOOP	        ;NO, START AGAIN
DONE		LDA	TIME	        ;GET TIME VALUE
		JSR	WAIT	        ;DELAY
		LDA	#$00	        ;RESTORE ORIGINAL
		STA	TONE	        ;TONE VALUE
		JSR	RESET	        ;CLEAR SOUND CHIP
		RTS		        ;REGISTERS AND RETURN

